Index: src/main/java/com/example/CashRegister/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.CashRegister;\r\n\r\nimport com.googlecode.lanterna.*;\r\nimport com.googlecode.lanterna.gui2.*;\r\nimport com.googlecode.lanterna.screen.Screen;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.cfg.Configuration;\r\nimport com.googlecode.lanterna.terminal.*;\r\n\r\nimport java.io.IOException;\r\nimport java.util.*;\r\n\r\nimport static java.lang.Thread.sleep;\r\n\r\npublic class Test {\r\n\r\n\r\n    public Test() throws IOException {\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException, InterruptedException {\r\n\r\n        //create session factory\r\n\r\n        DefaultTerminalFactory dtf = new DefaultTerminalFactory();\r\n\r\n        Screen screen = null;\r\n        try {\r\n            screen = dtf.createScreen();\r\n            screen.startScreen();\r\n\r\n            // Create panel to hold components\r\n            Panel panel = new Panel();\r\n            panel.setLayoutManager(new GridLayout(2));\r\n            BasicWindow window = new BasicWindow();\r\n            MultiWindowTextGUI gui = new MultiWindowTextGUI(screen, new DefaultWindowManager(), new EmptySpace(TextColor.ANSI.BLUE));\r\n\r\n\r\n            TerminalSize size = new TerminalSize(14, 10);\r\n\r\n            // add title to panel\r\n            Label title = new Label(\"Welcome to the Cash Register\");\r\n            title.setLayoutData(GridLayout.createHorizontallyFilledLayoutData(2));\r\n            panel.addComponent(title);\r\n\r\n            panel.addComponent(new EmptySpace(new TerminalSize(1, 1)));\r\n            panel.addComponent(new EmptySpace(new TerminalSize(1, 1)));\r\n            panel.addComponent(new EmptySpace(new TerminalSize(1, 1)));\r\n            panel.addComponent(new EmptySpace(new TerminalSize(1, 1)));\r\n\r\n\r\n            // add input to login\r\n            Label worker_id = new Label(\"Worker ID:\");\r\n            panel.addComponent(worker_id);\r\n            TextBox loginBox = new TextBox();\r\n            panel.addComponent(loginBox);\r\n\r\n            // add horizontal line\r\n            panel.addComponent(new EmptySpace(new TerminalSize(1, 1)));\r\n            panel.addComponent(new EmptySpace(new TerminalSize(1, 1)));\r\n\r\n            // add button to login on left side\r\n            Button login = new Button(\"Login\");\r\n            panel.addComponent(login);\r\n\r\n            // if login is pressed, check if worker id is correct\r\n            login.addListener(new Button.Listener() {\r\n                                  @Override\r\n                                  public void onTriggered(Button button) {\r\n                                      if (ifEmployeeExists(loginBox.getText())) {\r\n                                          gui.addWindowAndWait(new BasicWindow(\"Welcome\"));\r\n                                      } else {\r\n                                          gui.addWindowAndWait(new BasicWindow(\"Wrong ID\"));\r\n                                      }\r\n                                      gui.removeWindow(window);\r\n                                  }\r\n                              }\r\n            );\r\n\r\n\r\n            // if worker id is correct, open new window\r\n            // if worker id is incorrect, display error message\r\n\r\n\r\n//            CheckBoxList<String> list = new CheckBoxList<>(size);\r\n//            panel.addComponent(list);\r\n//            for (int i = 0; i < 10; i++) {\r\n//                list.addItem(\"item \" + i);\r\n//            }\r\n\r\n//            aaaaaaaaaaaaaaaaaaaaaxxxdfasdfaspodffastaf\r\n            //  add panel to window\r\n            window.setComponent(panel);\r\n\r\n\r\n//\r\n//            new Button(\"Fuck me\", new Runnable() {\r\n//                @Override\r\n//                public void run() {\r\n//                    //List<String> checkedItems = list.getCheckedItems();\r\n//\r\n//                    System.out.println(checkedItems);\r\n//\r\n//                    File input = new FileDialogBuilder()\r\n//                            .setTitle(\"Open File\")\r\n//                            .setDescription(\"Choose a file\")\r\n//                            .setActionLabel(\"Open\")\r\n//                            .build()\r\n//                            .showDialog(gui);\r\n//                }\r\n//            }).addTo(panel);\r\n\r\n\r\n// Create window to hold the panel\r\n            window.setComponent(panel);\r\n\r\n\r\n            // Create gui and start gui\r\n            gui.addWindowAndWait(window);\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (screen != null) {\r\n                try {\r\n                    screen.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n//        SessionFactory factory = new Configuration()\r\n//                .configure(\"hibernate.cfg.xml\")\r\n//                .addAnnotatedClass(ProductcategoryEntity.class)\r\n//                .addAnnotatedClass(TaxcategoryEntity.class)\r\n//                .buildSessionFactory();\r\n//\r\n//        //create session\r\n//\r\n//        Session session = factory.getCurrentSession();\r\n\r\n//        try {\r\n//            System.out.println(\"Creating new product object...\");\r\n//            ProductcategoryEntity pc = new ProductcategoryEntity();\r\n//            pc.setProductcategoryId(3);\r\n//            pc.setName(\"Categoria_test_2\");\r\n//            pc.setTaxcategoryId(1);\r\n//\r\n//            session.beginTransaction();\r\n//\r\n//\r\n//            System.out.println(\"Saving the product...\");\r\n//            session.save(pc);\r\n//\r\n//            session.getTransaction().commit();\r\n//\r\n//            System.out.println(\"Done!\");\r\n//            session.close();\r\n//\r\n//\r\n//        } finally {\r\n//            factory.close();\r\n//        }\r\n\r\n    }\r\n\r\n    // search id employee in database\r\n    private static boolean ifEmployeeExists(String id) {\r\n        SessionFactory sessionFactory = new Configuration().configure(\"hibernate.cfg.xml\").addAnnotatedClass(EmployeeEntity.class).buildSessionFactory();\r\n        Session session = sessionFactory.getCurrentSession();\r\n        session.beginTransaction();\r\n        List<EmployeeEntity> employeeEntityList = session.createQuery(\"from EmployeeEntity\").list();\r\n        for (EmployeeEntity employeeEntity : employeeEntityList) {\r\n            if (employeeEntity.getEmployeeId() == Integer.parseInt(id)) {\r\n                System.out.println(employeeEntity.getEmployeeId());\r\n                return true;\r\n            }\r\n        }\r\n        session.getTransaction().commit();\r\n        session.close();\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/CashRegister/Test.java b/src/main/java/com/example/CashRegister/Test.java
--- a/src/main/java/com/example/CashRegister/Test.java	
+++ b/src/main/java/com/example/CashRegister/Test.java	
@@ -170,17 +170,17 @@
     // search id employee in database
     private static boolean ifEmployeeExists(String id) {
         SessionFactory sessionFactory = new Configuration().configure("hibernate.cfg.xml").addAnnotatedClass(EmployeeEntity.class).buildSessionFactory();
-        Session session = sessionFactory.getCurrentSession();
-        session.beginTransaction();
-        List<EmployeeEntity> employeeEntityList = session.createQuery("from EmployeeEntity").list();
-        for (EmployeeEntity employeeEntity : employeeEntityList) {
-            if (employeeEntity.getEmployeeId() == Integer.parseInt(id)) {
-                System.out.println(employeeEntity.getEmployeeId());
-                return true;
-            }
-        }
-        session.getTransaction().commit();
-        session.close();
+//        Session session = sessionFactory.getCurrentSession();
+//        session.beginTransaction();
+//        List<EmployeeEntity> employeeEntityList = session.createQuery("from EmployeeEntity").list();
+//        for (EmployeeEntity employeeEntity : employeeEntityList) {
+//            if (employeeEntity.getEmployeeId() == Integer.parseInt(id)) {
+//                System.out.println(employeeEntity.getEmployeeId());
+//                return true;
+//            }
+//        }
+//        session.getTransaction().commit();
+//        session.close();
         return false;
     }
 
Index: .idea/artifacts/CashRegister_war.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ArtifactManager\">\r\n  <artifact type=\"war\" name=\"CashRegister:war\">\r\n    <output-path>$PROJECT_DIR$/target</output-path>\r\n    <properties id=\"maven-jee-properties\">\r\n      <options>\r\n        <exploded>false</exploded>\r\n        <module>CashRegister</module>\r\n        <packaging>war</packaging>\r\n        <unpackNestedArchives>false</unpackNestedArchives>\r\n      </options>\r\n    </properties>\r\n    <root id=\"archive\" name=\"CashRegister-1.0-SNAPSHOT.war\">\r\n      <element id=\"artifact\" artifact-name=\"CashRegister:war exploded\" />\r\n    </root>\r\n  </artifact>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/CashRegister_war.xml b/.idea/artifacts/CashRegister_war.xml
--- a/.idea/artifacts/CashRegister_war.xml	
+++ b/.idea/artifacts/CashRegister_war.xml	
@@ -3,10 +3,8 @@
     <output-path>$PROJECT_DIR$/target</output-path>
     <properties id="maven-jee-properties">
       <options>
-        <exploded>false</exploded>
         <module>CashRegister</module>
         <packaging>war</packaging>
-        <unpackNestedArchives>false</unpackNestedArchives>
       </options>
     </properties>
     <root id="archive" name="CashRegister-1.0-SNAPSHOT.war">
Index: .idea/artifacts/CashRegister_war_exploded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ArtifactManager\">\r\n  <artifact type=\"exploded-war\" name=\"CashRegister:war exploded\">\r\n    <output-path>$PROJECT_DIR$/target/CashRegister-1.0-SNAPSHOT</output-path>\r\n    <properties id=\"maven-jee-properties\">\r\n      <options>\r\n        <exploded>true</exploded>\r\n        <module>CashRegister</module>\r\n        <packaging>war</packaging>\r\n        <unpackNestedArchives>false</unpackNestedArchives>\r\n      </options>\r\n    </properties>\r\n    <root id=\"root\">\r\n      <element id=\"directory\" name=\"WEB-INF\">\r\n        <element id=\"directory\" name=\"classes\">\r\n          <element id=\"module-output\" name=\"CashRegister\" />\r\n        </element>\r\n        <element id=\"directory\" name=\"lib\">\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.hibernate:hibernate-core:5.4.30.Final\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.jboss.logging:jboss-logging:3.4.1.Final\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: javax.persistence:javax.persistence-api:2.2\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.javassist:javassist:3.27.0-GA\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: net.bytebuddy:byte-buddy:1.10.21\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: antlr:antlr:2.7.7\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.jboss:jandex:2.2.3.Final\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: com.fasterxml:classmate:1.5.1\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: javax.activation:javax.activation-api:1.2.0\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.dom4j:dom4j:2.1.3\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: javax.xml.bind:jaxb-api:2.3.1\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.glassfish.jaxb:jaxb-runtime:2.3.1\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.glassfish.jaxb:txw2:2.3.1\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: com.sun.istack:istack-commons-runtime:3.0.7\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: org.jvnet.staxex:stax-ex:1.8\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: com.sun.xml.fastinfoset:FastInfoset:1.2.15\" />\r\n          <element id=\"library\" level=\"project\" name=\"Maven: com.googlecode.lanterna:lanterna:3.1.1\" />\r\n        </element>\r\n      </element>\r\n      <element id=\"directory\" name=\"META-INF\">\r\n        <element id=\"file-copy\" path=\"$PROJECT_DIR$/target/CashRegister-1.0-SNAPSHOT/META-INF/MANIFEST.MF\" />\r\n      </element>\r\n      <element id=\"javaee-facet-resources\" facet=\"CashRegister/web/Web\" />\r\n    </root>\r\n  </artifact>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/CashRegister_war_exploded.xml b/.idea/artifacts/CashRegister_war_exploded.xml
--- a/.idea/artifacts/CashRegister_war_exploded.xml	
+++ b/.idea/artifacts/CashRegister_war_exploded.xml	
@@ -6,7 +6,6 @@
         <exploded>true</exploded>
         <module>CashRegister</module>
         <packaging>war</packaging>
-        <unpackNestedArchives>false</unpackNestedArchives>
       </options>
     </properties>
     <root id="root">
Index: CashRegister.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"web\" name=\"Web\">\r\n      <configuration>\r\n        <descriptors>\r\n          <deploymentDescriptor name=\"web.xml\" url=\"file://$MODULE_DIR$/src/main/webapp/WEB-INF/web.xml\" />\r\n        </descriptors>\r\n        <webroots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/webapp\" relative=\"/\" />\r\n        </webroots>\r\n        <sourceRoots />\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"jpa\" name=\"JPA\">\r\n      <configuration>\r\n        <setting name=\"validation-enabled\" value=\"true\" />\r\n        <setting name=\"provider-name\" value=\"Hibernate\" />\r\n        <datasource-mapping>\r\n          <factory-entry name=\"default\" />\r\n        </datasource-mapping>\r\n        <naming-strategy-map />\r\n        <deploymentDescriptor name=\"persistence.xml\" url=\"file://$MODULE_DIR$/src/main/resources/META-INF/persistence.xml\" />\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"hibernate\" name=\"Hibernate\">\r\n      <configuration>\r\n        <datasource-map />\r\n        <naming-strategy-map />\r\n        <deploymentDescriptor name=\"hibernate.cfg.xml\" url=\"file://$MODULE_DIR$/src/main/resources/hibernate.cfg.xml\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: javax.servlet:javax.servlet-api:4.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate:hibernate-core:5.4.30.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss.logging:jboss-logging:3.4.1.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.persistence:javax.persistence-api:2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.javassist:javassist:3.27.0-GA\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy:1.10.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: antlr:antlr:2.7.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss:jandex:2.2.3.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml:classmate:1.5.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.activation:javax.activation-api:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.dom4j:dom4j:2.1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.xml.bind:jaxb-api:2.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:jaxb-runtime:2.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:txw2:2.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.istack:istack-commons-runtime:3.0.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jvnet.staxex:stax-ex:1.8\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.xml.fastinfoset:FastInfoset:1.2.15\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.7.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.7.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.7.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.7.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.googlecode.lanterna:lanterna:3.1.1\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CashRegister.iml b/CashRegister.iml
--- a/CashRegister.iml	
+++ b/CashRegister.iml	
@@ -25,7 +25,9 @@
     </facet>
     <facet type="hibernate" name="Hibernate">
       <configuration>
-        <datasource-map />
+        <datasource-map>
+          <unit-entry name="hibernate.cfg.xml" />
+        </datasource-map>
         <naming-strategy-map />
         <deploymentDescriptor name="hibernate.cfg.xml" url="file://$MODULE_DIR$/src/main/resources/hibernate.cfg.xml" />
       </configuration>
